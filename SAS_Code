title 'IE Master ';

/*Note: this requires the updated insurance data file from github*/

proc import datafile="/folders/myfolders/IE_project/by_zip.csv" out=insurance_raw 
		dbms=csv replace;
	getnames=yes;
run;

proc print data=insurance_raw;
	/* print out the data,*/
run;

/* CREATE DUMMY GEOGRAPHIC VARIABLE */
/* 
 * d = downtown
 * fns = far north side
 * ns = north side
 * nws = north west side
 * s = south
 * ws = west side
 * 
 * See the map
 */

/* Here I'm using d = downtown = 0 as a reference level.  -Sam */
data insurance;
	set insurance_raw;
/* 	if area = "d" then d = 1; */
	if area = "fns" then fns = 1;
	if area = "ns" then ns = 1;
	if area = "nws" then nws = 1;
	if area = "s" then s = 1;
	if area = "ws" then ws = 1;
	cat_area = put(area, 10. -L);
	drop area;
	rename cat_area = area;
run;

/* Can't make this matrix without converting area to categorical */
/* proc sgscatter data=insurance;  */
/*       matrix invol income race fire theft vol age / diagonal=(histogram normal kernel); */
/*       matrix invol income race fire theft vol age area / group=area diagonal=(histogram normal kernel);  */
/*       plot invol*(income race fire theft vol area) / reg loess=(clm alpha=0.05); */
/*       plot invol*(income race fire theft vol age) / group=area reg=(nogroup) loess=(clm alpha=0.05 nogroup); */
/*    run; */

/* In Summary, I find three possible models:  */
/* model 1:  sqrt(invol) ~ log(fire) + income + race^(1/3) + area */
/* model 2:  sqrt(invol) ~ log(fire) + income + race^(1/3) + vol + area*/
/* model 3: sqrt(invol) ~ log(fire) + income + race^(1/3)  + vol + theft + area*/

/* Next steps:
/* 1.  Actually fit these models and see how they perform */
/* 2.  Look at the VIF to see if we need to include all predictors.  ie, what about vol and theft? */
/* 3.  Test for colinearity between the (now transformed) predictors*/

data insurance_invol_adj;
	set insurance;
	root_invol=sqrt(invol);
run;

/* Root invol vs fire regression model */
proc reg data=insurance_invol_adj;
	model root_invol=fire;
	plot root_invol*fire;
	output out=fireroot_invol r=fire_Resid;
	plot r.*fire r.*p. r.*nqq.;
	run;

proc univariate data=insurance_invol_adj plot;
	var root_invol fire;
run;

/*From the fit of root invol v fire, it looks as though there is a downward curve.  This implies
that we should also take the sqrt or log of fire.  I tried both and found the log to give a slightly
better fit.  Not the significant number of zero invol values.  - Sam*/

data insurance_invol_fire_adj;
	set insurance;
	log_fire=log(fire);
	root_invol=sqrt(invol);
run;

title 'root_invol v log_fire';

proc reg data=insurance_invol_fire_adj;
	model root_invol=log_fire;

	/* plot root_invol*log_fire; */
	/* output out = logfire_root_invol r=log_fire_Resid; */
	/* plot r.*log_fire r.*p. r.*nqq.; */
	run;

	/* Root invol vs income regression model */
data insurance_income_adj;
	set insurance;
	root_invol=sqrt(invol);
run;

/* The below output looks fine.  I don't believe we need to transform income - Sam */
title 'root_invol v income';

proc reg data=insurance_income_adj;
	model root_invol=income;
	plot root_invol*income;
	output out=fireroot_invol r=income_Resid;
	plot r.*income r.*p. r.*nqq.;
	run;

/* root invol vs race regression model */
data insurance_race_adj;
	set insurance;
	root_invol=sqrt(invol);
	root_race=race**(1/3);
run;

title 'root_invol v cube_root_race';

/* The residuals are approximately normal (only slightly skewed) and the plot shows a decent fit. */
/* All points are inside the confidence bands -Sam */

proc reg data=insurance_race_adj;
	model root_invol=root_race;
	plot root_invol*root_race;
	output out = race_root_invol r = root_race_Resid;
	plot r.*root_race r.*p. r.*nqq.;
	run;


/* root invol vs age */
data insurance_age_adj;
	set insurance;
	root_invol = sqrt(invol);
run;

title 'root_invol v age';

/*  */

proc reg data = insurance_age_adj;
	model root_invol = age;
	plot root_invol*age;
	output out = race_root_invol r = age_Resid;
	plot r.age r.*p. r.*nqq.;
	run;
	
/* root invol vs theft */
data insurance_theft_adj;
	set insurance;
	root_invol = sqrt(invol);
run;

title 'root_invol v theft';

/* I don't think there's much to be done here. -Sam */

proc reg data = insurance_theft_adj;
	model root_invol = theft;
	plot root_invol*theft;
	output out = race_root_invol r = theft_Resid;
	plot r.theft r.*p. r.*nqq.;
	run;
	
/* root invol vs vol */
data insurance_vol_adj;
	set insurance;
	root_invol = sqrt(invol);
run;

title 'root_invol v vol';

/*significant outliers.  The zeros of invol have a lot of leverage. -Sam */

proc reg data = insurance_vol_adj;
	model root_invol = vol;
	plot root_invol*vol;
	output out = vol_root_invol r = vol_Resid;
	plot r.vol r.*p. r.*nqq.;
	run;

	/* proc univariate plot data=fireroot_invol; */
	/* var fire_Resid; */
	/* run; */
